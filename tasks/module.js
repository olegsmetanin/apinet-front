/**
 * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */

/**
 * @license RequireJS i18n 2.0.4 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/i18n for details
 */

define("tasks/moduleDef",["angular"],function(angular){return angular.module("core.module")}),define("text",["module"],function(module){var text,fs,Cc,Ci,xpcIsWindows,progIds=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],xmlRegExp=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,bodyRegExp=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,hasLocation=typeof location!="undefined"&&location.href,defaultProtocol=hasLocation&&location.protocol&&location.protocol.replace(/\:/,""),defaultHostName=hasLocation&&location.hostname,defaultPort=hasLocation&&(location.port||undefined),buildMap={},masterConfig=module.config&&module.config()||{};text={version:"2.0.10",strip:function(content){if(content){content=content.replace(xmlRegExp,"");var matches=content.match(bodyRegExp);matches&&(content=matches[1])}else content="";return content},jsEscape:function(content){return content.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:masterConfig.createXhr||function(){var xhr,i,progId;if(typeof XMLHttpRequest!="undefined")return new XMLHttpRequest;if(typeof ActiveXObject!="undefined")for(i=0;i<3;i+=1){progId=progIds[i];try{xhr=new ActiveXObject(progId)}catch(e){}if(xhr){progIds=[progId];break}}return xhr},parseName:function(name){var modName,ext,temp,strip=!1,index=name.indexOf("."),isRelative=name.indexOf("./")===0||name.indexOf("../")===0;return index!==-1&&(!isRelative||index>1)?(modName=name.substring(0,index),ext=name.substring(index+1,name.length)):modName=name,temp=ext||modName,index=temp.indexOf("!"),index!==-1&&(strip=temp.substring(index+1)==="strip",temp=temp.substring(0,index),ext?ext=temp:modName=temp),{moduleName:modName,ext:ext,strip:strip}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(url,protocol,hostname,port){var uProtocol,uHostName,uPort,match=text.xdRegExp.exec(url);return match?(uProtocol=match[2],uHostName=match[3],uHostName=uHostName.split(":"),uPort=uHostName[1],uHostName=uHostName[0],(!uProtocol||uProtocol===protocol)&&(!uHostName||uHostName.toLowerCase()===hostname.toLowerCase())&&(!uPort&&!uHostName||uPort===port)):!0},finishLoad:function(name,strip,content,onLoad){content=strip?text.strip(content):content,masterConfig.isBuild&&(buildMap[name]=content),onLoad(content)},load:function(name,req,onLoad,config){if(config.isBuild&&!config.inlineText){onLoad();return}masterConfig.isBuild=config.isBuild;var parsed=text.parseName(name),nonStripName=parsed.moduleName+(parsed.ext?"."+parsed.ext:""),url=req.toUrl(nonStripName),useXhr=masterConfig.useXhr||text.useXhr;if(url.indexOf("empty:")===0){onLoad();return}!hasLocation||useXhr(url,defaultProtocol,defaultHostName,defaultPort)?text.get(url,function(content){text.finishLoad(name,parsed.strip,content,onLoad)},function(err){onLoad.error&&onLoad.error(err)}):req([nonStripName],function(content){text.finishLoad(parsed.moduleName+"."+parsed.ext,parsed.strip,content,onLoad)})},write:function(pluginName,moduleName,write,config){if(buildMap.hasOwnProperty(moduleName)){var content=text.jsEscape(buildMap[moduleName]);write.asModule(pluginName+"!"+moduleName,"define(function () { return '"+content+"';});\n")}},writeFile:function(pluginName,moduleName,req,write,config){var parsed=text.parseName(moduleName),extPart=parsed.ext?"."+parsed.ext:"",nonStripName=parsed.moduleName+extPart,fileName=req.toUrl(parsed.moduleName+extPart)+".js";text.load(nonStripName,req,function(value){var textWrite=function(contents){return write(fileName,contents)};textWrite.asModule=function(moduleName,contents){return write.asModule(moduleName,fileName,contents)},text.write(pluginName,nonStripName,textWrite,config)},config)}};if(masterConfig.env==="node"||!masterConfig.env&&typeof process!="undefined"&&process.versions&&!!process.versions.node&&!process.versions["node-webkit"])fs=require.nodeRequire("fs"),text.get=function(url,callback,errback){try{var file=fs.readFileSync(url,"utf8");file.indexOf("ï»¿")===0&&(file=file.substring(1)),callback(file)}catch(e){errback(e)}};else if(masterConfig.env==="xhr"||!masterConfig.env&&text.createXhr())text.get=function(url,callback,errback,headers){var xhr=text.createXhr(),header;xhr.open("GET",url,!0);if(headers)for(header in headers)headers.hasOwnProperty(header)&&xhr.setRequestHeader(header.toLowerCase(),headers[header]);masterConfig.onXhr&&masterConfig.onXhr(xhr,url),xhr.onreadystatechange=function(evt){var status,err;xhr.readyState===4&&(status=xhr.status,status>399&&status<600?(err=new Error(url+" HTTP status: "+status),err.xhr=xhr,errback(err)):callback(xhr.responseText),masterConfig.onXhrComplete&&masterConfig.onXhrComplete(xhr,url))},xhr.send(null)};else if(masterConfig.env==="rhino"||!masterConfig.env&&typeof Packages!="undefined"&&typeof java!="undefined")text.get=function(url,callback){var stringBuffer,line,encoding="utf-8",file=new java.io.File(url),lineSeparator=java.lang.System.getProperty("line.separator"),input=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file),encoding)),content="";try{stringBuffer=new java.lang.StringBuffer,line=input.readLine(),line&&line.length()&&line.charAt(0)===65279&&(line=line.substring(1)),line!==null&&stringBuffer.append(line);while((line=input.readLine())!==null)stringBuffer.append(lineSeparator),stringBuffer.append(line);content=String(stringBuffer.toString())}finally{input.close()}callback(content)};else if(masterConfig.env==="xpconnect"||!masterConfig.env&&typeof Components!="undefined"&&Components.classes&&Components.interfaces)Cc=Components.classes,Ci=Components.interfaces,Components.utils["import"]("resource://gre/modules/FileUtils.jsm"),xpcIsWindows="@mozilla.org/windows-registry-key;1"in Cc,text.get=function(url,callback){var inStream,convertStream,fileObj,readData={};xpcIsWindows&&(url=url.replace(/\//g,"\\")),fileObj=new FileUtils.File(url);try{inStream=Cc["@mozilla.org/network/file-input-stream;1"].createInstance(Ci.nsIFileInputStream),inStream.init(fileObj,1,0,!1),convertStream=Cc["@mozilla.org/intl/converter-input-stream;1"].createInstance(Ci.nsIConverterInputStream),convertStream.init(inStream,"utf-8",inStream.available(),Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),convertStream.readString(inStream.available(),readData),convertStream.close(),inStream.close(),callback(readData.value)}catch(e){throw new Error((fileObj&&fileObj.path||"")+": "+e)}};return text}),define("text!tasks/states/task-type/taskTypeList.tpl.html",[],function(){return'<div class="container" \r\n	ng-controller="taskTypeCtrl"\r\n	filtered-list="{method: \'tasks/dictionary/getTaskTypes\'}"\r\n	initial-sorters="{ Name: \'asc\' }">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n			<!-- Title -->\r\n			<div class="row hidden-sm hidden-md hidden-lg">\r\n				<div class="col-xs-12">\r\n					<div class="page-header">\r\n						<h1 class="pull-left">\r\n							<i class="icon-cog"></i>\r\n							<span>{{ i18n.tasks.types.title }}</span>\r\n						</h1>\r\n					</div>\r\n				</div>\r\n			</div>\r\n\r\n			<!-- Filter -->\r\n			<div filters-box="filter" meta="tasks/dictionary/taskTypeMetadata" group="Tasks.TaskType"\r\n				apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n				style="padding-top: 5px">\r\n					<form class="form form-horizontal">\r\n						<div class="form-group">\r\n							<label class="col-md-3 control-label">{{ i18n.core.fields.name }}</label>\r\n							<div class="col-md-9">\r\n								<input type="text" ng-model="filter.simple.Name" filter-node="{path: \'Name\', op:\'like\'}" class="form-control" />\r\n							</div>\r\n						</div>\r\n					</form>\r\n			</div>\r\n\r\n			<!-- Content -->\r\n			<ago-box color="purple" large="true" header-class="{\'hidden-xs\': true, \'hidden-md\': true, \'hidden-lg\': true}">\r\n				<ago-box-title>\r\n					<i class="icon-cog"></i>\r\n					{{ i18n.tasks.types.title }}\r\n				</ago-box-title>\r\n				<ago-box-content>\r\n					<div class="box-toolbox box-toolbox-top">\r\n						<ago-error-msg></ago-error-msg>\r\n\r\n						<form name="createTaskTypeForm" class="form-inline" novalidate>\r\n							<div class="row">\r\n								<div class="col-sm-6" ng-class="{\'has-error\': (createTaskTypeForm.$invalid || validation.fieldErrors[\'Name\'])}">\r\n									<div class="row">\r\n										<div class="input-group col-xs-12">\r\n											<input type="text" ng-model="editModel.name" placeholder="{{ i18n.tasks.types.placeholders.name }}" class="form-control" ng-required="editModel.focused" ng-focus="editModel.focused=true" ng-blur="editModel.focused=false"/>\r\n											<div class="input-group-btn">\r\n												<button type="button" class="btn" ng-click="createTaskType()" ng-disabled="!createEnabled()">{{ i18n.core.buttons.add }}</button>\r\n												<button type="button" class="btn" ng-click="dropChanges()" title="{{ i18n.core.buttons.clear }}">&times;</button>\r\n											</div>\r\n										</div>\r\n									</div>\r\n									<div class="row">\r\n										<div class="col-xs-12">\r\n											<span ng-show="validation.fieldErrors[\'Name\']" class="help-block has-error">\r\n												{{ validation.fieldErrors[\'Name\'] | joinBy }}\r\n											</span>\r\n										</div>\r\n									</div>\r\n								</div>\r\n\r\n								<div class="col-sm-6">\r\n									<div class="row">\r\n										<div class="col-md-3">\r\n											<button type="button" class="btn btn-danger pull-right" ng-click="deleteSelected()" ng-disabled="!hasSelected()" title="{{i18n.core.buttons.deleteSelected}}">{{ i18n.core.buttons.delete }}</button>\r\n											<div class="clearfix"></div>\r\n										</div>\r\n										<div class="col-md-9">\r\n											<input type="text" lookup="tasks/dictionary/lookupTaskTypes" lookup-options="{allowClear: true}" ng-model="deleteModel.replacementType" placeholder="{{ i18n.tasks.types.placeholders.replacementType }}" class="form-control" />\r\n										</div>\r\n									</div>\r\n								</div>\r\n							</div>\r\n						</form>\r\n					</div><!-- toolbox -->\r\n\r\n					<div class="responsive-table">\r\n						<div class="scrollable-area">\r\n							<table class="table table-bordered">\r\n								<thead>\r\n									<tr>\r\n										<th class="onepct">\r\n											<input type="checkbox" checker="items: \'models\'">\r\n										</th>\r\n										<th><span sortable-heading="sorters.Name" caption="{{ i18n.core.fields.name }}"></span></th>\r\n										<th style="width: 15%"><span sortable-heading="sorters.Creator_FIO" caption="{{ i18n.core.fields.creator }}"></span></th>\r\n										<th style="width: 20%"><span sortable-heading="sorters.CreationTime" caption="{{ i18n.core.fields.creationTime }}"></span></th>\r\n										<th class="onepct">&nbsp;</th>\r\n									</tr>\r\n								</thead>\r\n								<tbody>\r\n									<tr ng-repeat="model in models">\r\n										<td>\r\n											<input type="checkbox" ng-model="model.selected" data-itemid="{{ model.Id }}">\r\n										</td>\r\n										<td>\r\n											<inline-text model="model.Name" on-update="onUpdate(model, val)" on-cancel="onCancel(model, val)" input-class="span10" required></inline-text>\r\n											<span ng-show="model.validation.fieldErrors[\'Name\']" class="help-block alert-error">\r\n												{{ model.validation.fieldErrors[\'Name\'] | joinBy }}\r\n											</span>\r\n										</td>\r\n										<td>{{ model.Author }}</td>\r\n										<td>{{ model.CreationTime | date:\'dd.MM.yyyy hh:mm:ss\' }}</td>\r\n										<td>\r\n											<ago-btn-delete title="{{ i18n.tasks.types.buttons.delete }}" ng-click="delete(model)"></ago-btn-delete>\r\n										</td>\r\n									</tr>\r\n								</tbody>\r\n							</table>\r\n						</div>\r\n					</div>\r\n\r\n					<div class="box-toolbox box-toolbox-bottom">\r\n						<button type="button" class="btn btn-primary" ng-click="paging.page = paging.page + 1">{{ i18n.core.buttons.more }}</button>\r\n\r\n						<counter action="tasks/dictionary/getTaskTypesCount"></counter>\r\n					</div>\r\n				</ago-box-content>\r\n			</ago-box>\r\n		\r\n		</div><!-- col-xs-12 -->\r\n	</div><!-- row content-wrapper -->\r\n</div>'}),define("text!tasks/states/moduleMenu.tpl.html",[],function(){return'<li ng-controller="userRoleCtrl">\r\n	<a href="#" class="dropdown-collapse">\r\n		<i class=\'icon-user\'></i>\r\n		<span>{{ \'core.roles.title\' | i18n:{role: (roleName || i18n.core.roles.nothing)} }}</span>\r\n		<i class=\'icon-angle-down angle-down\'></i>\r\n	</a>\r\n	<ul class="nav nav-stacked">\r\n		<li><a href="#" onclick="event.preventDefault();" ng-click="setRole(\'admin\')">\r\n			<i ng-show="roleIs(\'admin\')" class="icon-ok" style="float:right;"></i>{{ i18n.core.roles.admin }}</a>\r\n		</li>\r\n		<li><a href="#" onclick="event.preventDefault();" ng-click="setRole(\'manager\')">\r\n			<i ng-show="roleIs(\'manager\')" class="icon-ok" style="float:right;"></i>{{ i18n.tasks.roles.manager }}</a>\r\n		</li>\r\n		<li><a href="#" onclick="event.preventDefault();" ng-click="setRole(\'executor\')">\r\n			<i ng-show="roleIs(\'executor\')" class="icon-ok" style="float:right;"></i>{{ i18n.tasks.roles.executor }}</a>\r\n		</li>\r\n	</ul>\r\n</li>\r\n\r\n<li ng-class="{\'active\': $state.is(\'page.project.info\')}">\r\n	<a ui-sref="page.project.info">\r\n		<i class="icon-info"></i>\r\n		<span>{{ i18n.tasks.menu.projectInfo }}</span>\r\n	</a>\r\n</li>\r\n<li ng-class="{\'active\': $state.is(\'page.project.tasks\')}">\r\n	<a ui-sref="page.project.tasks">\r\n		<i class="icon-tasks"></i>\r\n		<span>{{ i18n.tasks.list.title }}</span>\r\n	</a>\r\n</li>\r\n<li ng-class="{\'active\': $state.is(\'page.project.taskTypes\')}">\r\n	<a ui-sref="page.project.taskTypes">\r\n		<i class="icon-cog"></i>\r\n		<span>{{ i18n.tasks.types.title }}</span>\r\n	</a>\r\n</li>'}),define("tasks/states/task-type/taskTypeList",["../../moduleDef","angular","text!./taskTypeList.tpl.html","text!../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.state({name:"page.project.taskTypes",url:"/dictionary/types",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:function(pageConfig,i18n){pageConfig.setConfig({menu:"tasks.dictionary.types",breadcrumbs:[{name:i18n.msg("tasks.list.title"),url:"page.project.tasks"},{name:i18n.msg("tasks.types.title"),url:"tasks.dictionary.types"}]})}}).controller("taskTypeCtrl",["$scope","$stateParams","apinetService","$window","i18n",function($scope,$stateParams,apinetService,$window,i18n){var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=[error]},handleError=function(validation){$scope.resetValidation(),angular.extend($scope,validation)};$scope.removeFromModels=function(modelsToRemove){for(var i=0;i<modelsToRemove.length;i++){var index=$scope.models.indexOf(modelsToRemove[i]);if(index<0)continue;$scope.models.splice(index,1)}},$scope.createTaskType=function(){$scope.resetValidation(),$scope.editModel.id=null,apinetService.action({method:"tasks/dictionary/editTaskType",project:$stateParams.project,model:$scope.editModel}).then(function(result){result.validation.success?($scope.editModel.name="",$scope.createTaskTypeForm.$setPristine(),$scope.models.unshift(result.model)):handleError(result)},handleException)},$scope.hasSelected=function(){for(var i=0;i<$scope.models.length;i++)if($scope.models[i].selected&&$scope.models[i].selected===!0)return!0;return!1},$scope.deleteSelected=function(){if(!$window.confirm(i18n.msg("core.confirm.delete.records")))return;var ids=[],modelsToRemove=[];for(var i=0;i<$scope.models.length;i++)$scope.models[i].selected&&$scope.models[i].selected===!0&&(ids.push($scope.models[i].Id),modelsToRemove.push($scope.models[i]));if(ids.length<=0)return;$scope.resetValidation();var replaceId=null;$scope.deleteModel.replacementType&&$scope.deleteModel.replacementType.id&&(replaceId=$scope.deleteModel.replacementType.id),apinetService.action({method:"tasks/dictionary/deleteTaskTypes",project:$stateParams.project,ids:ids,replacementTypeId:replaceId}).then(function(){$scope.removeFromModels(modelsToRemove)},handleException)},$scope.delete=function(model){if(!model)return;if(!$window.confirm(i18n.msg("core.confirm.delete.record")))return;apinetService.action({method:"tasks/dictionary/deleteTaskType",project:$stateParams.project,id:model.Id}).then(function(){$scope.removeFromModels([model])},handleException)},$scope.onUpdate=function(model,val){return $scope.resetValidation(),apinetService.action({method:"tasks/dictionary/editTaskType",project:$stateParams.project,model:{Id:model.Id,Name:val,ModelVersion:model.ModelVersion}}).then(function(response){return response.validation.success?(angular.extend(model,response.model),model.validation={}):model.validation=response.validation,response.validation.success},handleException)},$scope.onCancel=function(model){model.validation={}},$scope.requestParams={project:$stateParams.project},$scope.editModel={id:null,name:""},$scope.deleteModel={replacementType:null}}])}),define("text!tasks/states/task/taskList.tpl.html",[],function(){return'<div class="container" \r\n		ng-controller="taskListCtrl"\r\n        filtered-list="{method: \'tasks/tasks/getTasks\'}"\r\n        initial-sorters="{ InternalSeqNumber: \'desc\' }">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n			<!-- Title -->\r\n			<div class="row hidden-sm hidden-md hidden-lg">\r\n				<div class="col-xs-12">\r\n					<div class="page-header">\r\n						<h1 class="pull-left">\r\n							<i class="icon-tasks"></i>\r\n							<span>{{ i18n.tasks.list.title }}</span>\r\n						</h1>\r\n					</div>\r\n				</div>\r\n			</div>\r\n\r\n			<!-- Filter -->	\r\n			<div filters-box="filter" meta="tasks/tasks/taskMetadata" group="Tasks.Task" \r\n				apply-enabled="applyEnabled" apply-filter="applyFilter" reset-filter="resetFilter"\r\n				style="padding-top: 5px">\r\n				<form class="form form-horizontal">\r\n					<div class="form-group">\r\n						<label class="col-md-3 control-label">{{ i18n.tasks.list.filters.custom }}</label>\r\n						<div class="col-md-9">\r\n							<select ng-model="filter.simple.Combined" class="form-control">\r\n								<option value="all">{{ i18n.tasks.list.filters.predefined.all }}</option>\r\n								<option value="overdue">{{ i18n.tasks.list.filters.predefined.overdue }}</option>\r\n								<option value="dayLeft">{{ i18n.tasks.list.filters.predefined.dayLeft }}</option>\r\n								<option value="weekLeft">{{ i18n.tasks.list.filters.predefined.weekLeft }}</option>\r\n								<option value="noLimit">{{ i18n.tasks.list.filters.predefined.noLimit }}</option>\r\n								<option value="closedToday">{{ i18n.tasks.list.filters.predefined.closedToday }}</option>\r\n								<option value="closedYesterday">{{ i18n.tasks.list.filters.predefined.closedYesterday }}</option>\r\n							</select>\r\n						</div>\r\n					</div>\r\n					<div class="form-group">\r\n						<label class="col-md-3 control-label">{{ i18n.tasks.fields.status }}</label>\r\n						<div class="col-md-9">\r\n							<input lookup="tasks/dictionary/lookupTaskStatuses" ng-model="filter.simple.Status" filter-node="{path: \'Status\', op: \'=\'}" class="form-control" multiple />\r\n						</div>\r\n					</div>\r\n					<div class="form-group">\r\n						<label class="col-md-3 control-label">{{ i18n.tasks.fields.seqNumber }}</label>\r\n						<div class="col-md-9">\r\n							<input lookup="tasks/tasks/lookupTasks" ng-model="filter.simple.SeqNumber" filter-node="{path: \'Id\', op: \'=\'}" class="form-control" multiple />\r\n						</div>\r\n					</div>\r\n					<div class="form-group">\r\n						<label class="col-md-3 control-label">{{ i18n.tasks.fields.type }}</label>\r\n						<div class="col-md-9">\r\n							<input lookup="tasks/dictionary/lookupTaskTypes" ng-model="filter.simple.TaskType" filter-node="{path: \'TaskType\', op: \'=\'}" class="form-control" multiple />\r\n						</div>\r\n					</div>\r\n					<div class="form-group">\r\n						<label class="col-md-3 control-label">{{ i18n.tasks.fields.dueDate }}</label>\r\n						<div class="col-md-9">\r\n							<div class="col-xs-5" style="padding-left: 0; padding-right: 0">\r\n								<input type="text" ng-model="filter.simple.lDate" ago-datepicker filter-node="{path: \'DueDate\', op: \'>=\'}" class="form-control" />\r\n							</div>\r\n							<span class="col-xs-1" style="padding: 0; text-align: center">-</span>\r\n							<div class="col-xs-5" style="padding-left: 0; padding-right: 0">\r\n								<input type="text" ng-model="filter.simple.rDate" ago-datepicker filter-node="{path: \'DueDate\', op: \'<\'}" class="form-control" />\r\n							</div>\r\n						</div>\r\n					</div>\r\n					<div class="form-group">\r\n						<label class="col-md-3 control-label">{{ i18n.tasks.fields.executors }}</label>\r\n						<div class="col-md-9">\r\n							<input lookup="core/projects/lookupParticipant" ng-model="filter.simple.Executors" filter-node="{path: \'Executors.Id\', op: \'=\'}" class="form-control" multiple />\r\n						</div>\r\n					</div>\r\n					<div class="form-group">\r\n						<label class="col-md-3 control-label">{{ i18n.tasks.fields.content }}</label>\r\n						<div class="col-md-9">\r\n							<input type="text" ng-model="filter.simple.Content" filter-node="{path: \'Content\', op:\'like\'}" class="form-control"  />\r\n						</div>\r\n					</div>\r\n				</form>\r\n\r\n				<filters-box-more-filters>\r\n					<ago-box color="muted" border="muted" caption="{{ i18n.core.filters.user }}" title-click-collapse padding collapsed="propsFilterCollapsed">\r\n						<div user-filter filter-ng-model="filter.user"></div>\r\n					</ago-box>\r\n				</filters-box-more-filters>\r\n				\r\n			</div><!-- div filter-box -->\r\n\r\n			<!-- Content -->\r\n			<ago-box color="purple" large="true" header-class="{\'hidden-xs\': true, \'hidden-md\': true, \'hidden-lg\': true}">\r\n				<ago-box-title>\r\n					<i class="fa icon-tasks"></i>\r\n					{{ i18n.tasks.list.title }}\r\n				</ago-box-title>\r\n\r\n				<ago-box-content>\r\n					<div class="box-toolbox box-toolbox-top">\r\n						<ago-error-msg></ago-error-msg>\r\n\r\n						<div>\r\n							<a ui-sref="page.project.taskCreate" class="btn btn-primary" ng-click="newItem();">\r\n								<i class="icon-plus icon-white"></i>\r\n								<span>{{ i18n.tasks.list.buttons.add }}</span>\r\n							</a>\r\n\r\n							<ago-report-selector report-types="REPORT_TYPES" on-error="onReportError(error)" on-get-params="fillReportParameters(settings, parameters)">\r\n							</ago>\r\n\r\n							<button type="button" class="btn btn-danger pull-right" ng-click="deleteSelected()" ng-disabled="!hasSelected()" title="{{ i18n.tasks.list.placeholders.deleteSelected }}">\r\n								{{ i18n.core.buttons.delete }}\r\n							</button>\r\n						</div>\r\n					</div>\r\n\r\n					<div class="responsive-table">\r\n						<div class="scrollable-area">\r\n							<table class="table table-bordered">\r\n								<thead>\r\n									<tr>\r\n										<th class="onepct">\r\n											<input type="checkbox" checker="items: \'models\'">\r\n										</th>\r\n										<th class="col-xs-1"><span sortable-heading="sorters.InternalSeqNumber" caption="{{ i18n.tasks.fields.seqNumber }}"></span></th>\r\n										<th class="col-xs-4"><span sortable-heading="sorters.TaskType_Name" caption="{{ i18n.tasks.fields.type }}"></span></th>\r\n										<th class="col-xs-4">{{ i18n.tasks.fields.executors }}</th>\r\n										<th class="col-xs-2"><span sortable-heading="sorters.DueDate" caption="{{ i18n.tasks.fields.dueDate }}"></span></th>\r\n										<th class="col-xs-2"><span sortable-heading="sorters.Status" caption="{{ i18n.tasks.fields.status }}"></span></th>\r\n										<th class="onepct">&nbsp;</th>\r\n									</tr>\r\n								</thead>\r\n								<tbody >\r\n									<tr ng-repeat-start="model in models">\r\n										<td>\r\n											<input type="checkbox" ng-model="model.selected" data-itemid="{{ model.Id }}">\r\n										</td>\r\n										<td>\r\n											<a ui-sref="page.project.taskView({ num: model.SeqNumber })" style="white-space: nowrap">\r\n												{{ model.SeqNumber }}\r\n											</a>\r\n											<a href="" class="btn btn-primary btn-sm" data-toggle="button" ng-click="toggleDetails(model)">\r\n												<i class="fa" ng-class="{ \'icon-chevron-up\': model.details.expanded, \'icon-chevron-down\': !model.details.expanded }"></i>\r\n											</a>\r\n										</td>\r\n										<td>\r\n											{{ model.TaskType }}\r\n											<p ng-show="model.Content" title="{{ model.Content }}">\r\n												<small class="clip-content">{{ model.Content | textCut:50 }}</small>\r\n											</p>\r\n											<span ng-repeat="t in model.Tags" class="tag">\r\n												{{ t.text }}\r\n												<a href="#" title="{{ i18n.core.buttons.delete }}">&times;</a>\r\n											</span>\r\n										</td>\r\n										<td>\r\n											<executors model="model.Executors" ></executors>\r\n										</td>\r\n										<td>\r\n											{{ model.DueDate | date:\'ago_date\' }}\r\n											<span ng-if="model.DueDate && model.Status !== taskStatuses.Closed" title="{{ expiration(model).title }}" class="badge" ng-class="{\'label-warning\': !expiration(model).expired, \'label-important\': expiration(model).expired }">{{ expiration(model).days }}\r\n											</span>\r\n										</td>\r\n										<td>{{ model.Status }}</td>\r\n										<td>\r\n											<ago-btn-delete title="{{ i18n.tasks.list.placeholders.delete }}" ng-click="delete(model)"></ago-btn-delete>\r\n										</td>\r\n									</tr>\r\n									<tr ng-repeat-end ng-show="model.details.expanded" ng-init="model.details.loaded = false">\r\n										<td colspan="7">\r\n											<div ng-hide="model.details.loaded">{{ i18n.core.labels.loading }}...</div>\r\n											<div ng-show="model.details.loaded">\r\n												<table class="table table-bordered">\r\n													<tr>\r\n														<td>{{ i18n.tasks.fields.priority }}</td>\r\n														<td>{{ model.details.Priority }}</td>\r\n													</tr>\r\n													<tr>\r\n														<td>{{ i18n.tasks.fields.content }}</td>\r\n														<td><span style="white-space: normal">{{ model.details.Content }}</span></td>\r\n													</tr>\r\n													<tr>\r\n														<td>{{ i18n.tasks.fields.note }}</td>\r\n														<td><span style="white-space: normal">{{ model.details.Note }}</span></td>\r\n													</tr>\r\n													<tr>\r\n														<td>{{ i18n.tasks.fields.agreements }}</td>\r\n														<td>\r\n															<span ng-repeat="a in model.details.Agreements">\r\n																<i ng-class="{\'icon-check\': a.Done, \'icon-check-empty\': !a.Done}"></i>{{ a.Agreemer }}\r\n															</span>&nbsp; &nbsp;\r\n														</td>\r\n													</tr>\r\n													<tr>\r\n														<td>{{ \'tasks.fields.topFiles\' | i18n:{ count: 5 } }}</td>\r\n														<td>\r\n															<a href="/services/download/file/{{f}}" target="_blank" ng-repeat="f in model.details.Files">\r\n																<i class="icon-paper-clip"></i>{{ f }}\r\n															</a>\r\n														</td>\r\n													</tr>\r\n												</table>\r\n											</div>\r\n										</td>\r\n									</tr>\r\n								</tbody>\r\n							</table>\r\n						</div><!-- scrollable-area-->\r\n					</div><!-- responsive-table -->\r\n\r\n					<div class="box-toolbox box-toolbox-bottom">\r\n						<button type="button" class="btn btn-primary" ng-click="paging.page = paging.page + 1">{{ i18n.core.buttons.more }}</button>\r\n\r\n						<counter action=\'tasks/tasks/getTasksCount\'></counter>\r\n					</div>\r\n				</ago-box-content>\r\n			</ago-box><!-- box -->\r\n\r\n		</div><!-- col-xs-12 -->\r\n	</div><!-- row content-wrapper -->\r\n</div><!-- container -->'}),define("tasks/states/task/taskList",["../../moduleDef","angular","text!./taskList.tpl.html","text!../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.state({name:"page.project.tasks",url:"/tasks",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},resolve:{i18n:"i18n",pageConfig:"pageConfig"},onEnter:function(pageConfig,i18n){pageConfig.setConfig({menu:"tasks.list",breadcrumbs:[{name:i18n.msg("tasks.list.title"),url:"page.project.tasks"}]})}}).controller("taskListCtrl",["$scope","$stateParams","apinetService","$window","i18n","taskStatuses","$locale",function($scope,$stateParams,apinetService,$window,i18n,taskStatuses,$locale){$scope.REPORT_TYPES=["task-list"],$scope.propsFilterCollapsed=!0,$scope.taskStatuses=taskStatuses,$scope.$on("resetFilter",function(){$scope.filter.simple={Combined:"all"}}),$scope.$watch("filter.simple.Combined",function(value){$scope.requestParams.predefined=value||"all"},!0),$scope.deleteSelected=function(){if(!$window.confirm(i18n.msg("tasks.confirm.delete.tasks")))return;var ids=[],modelsToRemove=[];for(var i=0;i<$scope.models.length;i++)$scope.models[i].selected&&$scope.models[i].selected===!0&&(ids.push($scope.models[i].Id),modelsToRemove.push($scope.models[i]));if(ids.length<=0)return;apinetService.action({method:"tasks/tasks/deleteTasks",project:$stateParams.project,ids:ids}).then(function(){for(var i=0;i<modelsToRemove.length;i++){var index=$scope.models.indexOf(modelsToRemove[i]);if(index<0)continue;$scope.models.splice(index,1)}},handleException)},$scope.delete=function(task){if(!$window.confirm(i18n.msg("tasks.confirm.delete.task")))return;apinetService.action({method:"tasks/tasks/deleteTask",project:$stateParams.project,id:task.Id}).then(function(){var taskIndex=$scope.models.indexOf(task);if(taskIndex===-1)return;$scope.models.splice(taskIndex,1)},handleException)},$scope.hasSelected=function(){for(var i=0;i<$scope.models.length;i++)if($scope.models[i].selected&&$scope.models[i].selected===!0)return!0;return!1},$scope.toggleDetails=function(task){task.details.expanded=!task.details.expanded;if(!task.details.expanded)return;if(task.details.loaded===!0)return;apinetService.action({method:"tasks/tasks/GetTaskDetails",project:$stateParams.project,numpp:task.SeqNumber}).then(function(response){angular.extend(task.details,response),task.details.loaded=!0},handleException)},$scope.expiration=function(task){if(!task.DueDate)return null;if(task.Status===taskStatuses.Closed)return null;if(!angular.isDefined(task.expiration)){var now=new Date,dd=new Date(task.DueDate),f=Date.UTC(now.getFullYear(),now.getMonth(),now.getDate(),now.getHours(),now.getMinutes(),now.getSeconds()),s=Date.UTC(dd.getFullYear(),dd.getMonth(),dd.getDate(),dd.getHours(),dd.getMinutes(),dd.getSeconds()),ms=f-s,MS_PER_DAY=864e5,daysDiff=Math.floor(ms/MS_PER_DAY),pcat=$locale.pluralCat(Math.abs(daysDiff)),daysText="";switch(pcat){case"one":case"few":case"many":case"other":daysText=i18n.msg("tasks.view.statusHistory.duration.days."+pcat);break;case"zero":case"two":default:daysText=""}var msgKey="tasks.list.expiration."+(daysDiff<0?"already":"will"),msg=i18n.msg(msgKey,{days:Math.abs(daysDiff),daysText:daysText});task.expiration={days:Math.abs(daysDiff),expired:daysDiff<0,title:msg}}return task.expiration},$scope.fillReportParameters=function(settings,p){p.parameters={project:$stateParams.project,filter:$scope.filter,sorters:$scope.sortersArray,predefined:$scope.requestParams.predefined}},$scope.onReportError=function(error){handleException(error)};var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=[error]}}])}),define("text!tasks/states/task/create/taskCreate.tpl.html",[],function(){return'<div class="container" ng-controller="taskCreateCtrl">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n			<div class="box ">\r\n				<div class="box-header purple-background">\r\n					<div class="title">\r\n						<i class="icon-plus"></i>\r\n						{{ i18n.tasks.create.title }}\r\n					</div>\r\n				</div>\r\n\r\n				<div class="box-content">\r\n					<ago-error-msg></ago-error-msg>\r\n					\r\n					<form name="form" class="form form-horizontal" novalidate>\r\n						<!-- Task type -->\r\n						<div class="form-group" ng-class="{\'has-error\': form.taskType.$invalid}">\r\n							<label class="col-md-2 control-label" for="taskType">{{ i18n.tasks.fields.type }}</label>\r\n							<div class="col-md-5">\r\n								<input type="text" id="taskType" name="taskType" lookup="tasks/dictionary/lookupTaskTypes"\r\n								       ng-model="model.taskType" placeholder="{{ i18n.tasks.create.placeholders.type }}" autofocus required class="form-control" />\r\n							</div>\r\n							<div class="col-md-5">\r\n								<span ng-show="form.taskType.$error.required" class="help-block has-error">\r\n									* {{ i18n.core.errors.requiredField }}\r\n								</span>\r\n								<span ng-show="validation.fieldErrors[\'TaskType\']" class="help-block has-error">\r\n									{{ validation.fieldErrors[\'TaskType\'] | joinBy }}\r\n								</span>\r\n							</div>\r\n						</div>\r\n						<!-- Executors -->\r\n						<div class="form-group" ng-class="{\'has-error\': form.executors.$invalid}">\r\n							<label for="executors" class="col-md-2 control-label">{{ i18n.tasks.fields.executors }}</label>\r\n							<div class="col-md-5">\r\n								<input type="text" id="executors" name="executors" lookup="core/projects/lookupParticipant" ng-model="model.executors" multiple placeholder="{{ i18n.tasks.create.placeholders.executors }}" required-multiple class="form-control" />\r\n							</div>\r\n							<div class="col-md-5">\r\n								<span ng-show="form.executors.$error.required" class="help-block has-error">\r\n									* {{ i18n.core.errors.requiredField }}\r\n								</span>\r\n								<span ng-show="validation.fieldErrors[\'Executors\']" class="help-block has-error">\r\n									{{ validation.fieldErrors[\'Executors\'] | joinBy }}\r\n								</span>\r\n							</div>\r\n						</div>\r\n						<!-- Due date -->\r\n						<div class="form-group">\r\n							<label for="dueDate" class="col-md-2 control-label">{{ i18n.tasks.fields.dueDate }}</label>\r\n							<div class="col-md-5">\r\n								<input id="dueDate" name="dueDate" ago-datepicker ng-model="model.dueDate" class="form-control" />\r\n							</div>\r\n						</div>\r\n						<!-- Content -->\r\n						<div class="form-group">\r\n							<label class="col-md-2 control-label">{{ i18n.tasks.fields.content }}</label>\r\n							<div class="col-md-5">\r\n								<textarea name="content" ng-model="model.content" rows="3" class="form-control"></textarea>\r\n							</div>\r\n						</div>\r\n						<!-- Priority -->\r\n						<div class="form-group">\r\n							<label for="priority" class="col-md-2 control-label">{{ i18n.tasks.fields.priority }}</label>\r\n							<div class="col-md-5">\r\n								<input type="text" id="priority" lookup="tasks/dictionary/lookupTaskPriorities" lookup-options="{allowClear: true}" ng-model="model.priority" placeholder="{{ i18n.tasks.create.placeholders.priority }}" class="form-control" />\r\n							</div>\r\n						</div>\r\n						<!-- Goto section -->\r\n						<div class="form-group">\r\n							<label class="col-md-2 control-label">{{ i18n.tasks.create.labels.afterCreation }}:</label>\r\n							<div class="col-md-10">\r\n								<label class="radio radio-inline">\r\n									<input type="radio" ng-model="nextAction" value="goToTask">{{ i18n.tasks.create.labels.afterCreationGoToTask }}\r\n								</label>\r\n								<label class="radio radio-inline">\r\n									<input type="radio" ng-model="nextAction" value="goToList">{{ i18n.tasks.create.labels.afterCreationGoToList }}\r\n								</label>\r\n								<label class="radio radio-inline">\r\n									<input type="radio" ng-model="nextAction" value="stayHere">{{ i18n.tasks.create.labels.afterCreationStayHere }}\r\n								</label>\r\n							</div>\r\n						</div>\r\n						<!-- Action section -->\r\n						<div class="form-actions form-actions-padding-sm">\r\n							<div class="row">\r\n								<div class="col-md-10 col-md-offset-2">\r\n									<button type="button" class="btn" ng-click="cancel()">{{ i18n.core.buttons.cancel }}</button>\r\n									<button type="button" class="btn btn-success" ng-click="create()" ng-disabled="form.$invalid">{{ i18n.tasks.create.buttons.save }}</button>\r\n								</div>\r\n							</div>\r\n						</div>			\r\n					</form>\r\n\r\n				</div><!-- box-content -->\r\n			</div><!-- box -->\r\n\r\n		</div><!-- col-xs-12 -->\r\n	</div><!-- row -->\r\n</div><!-- container -->'}),define("tasks/states/task/create/taskCreate",["../../../moduleDef","angular","text!./taskCreate.tpl.html","text!../../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.state({name:"page.project.taskCreate",url:"/tasks/new",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:function(pageConfig,i18n){pageConfig.setConfig({breadcrumbs:[{name:i18n.msg("tasks.list.title"),url:"page.project.tasks"},{name:i18n.msg("tasks.create.title"),url:"page.project.taskCreate"}]})}}).controller("taskCreateCtrl",["$scope","$stateParams","apinetService","$state",function($scope,$stateParams,apinetService,$state){$scope.cancel=function(){$state.go("page.project.tasks")},$scope.create=function(){var req=modelToRequest();apinetService.action({method:"tasks/tasks/createTask",project:$stateParams.project,model:req}).then(function(response){response.validation.success?$scope.nextAction==="goToTask"?$state.transitionTo("page.taskView",{num:response.model},!0):$scope.nextAction==="goToList"?$state.transitionTo("page.root",{},!0):$scope.nextAction==="stayHere"&&($scope.model=initModel(),$scope.form.$setPristine()):(resetValidation(),angular.extend($scope.validation,response.validation))},function(error){resetValidation(),$scope.validation.generalErrors=[error]})};var initModel=function(){return{taskType:null,executors:[],dueDate:null,content:null,priority:null}};$scope.model=initModel(),$scope.nextAction="goToTask",$scope.validation={};var modelToRequest=function(){var m=$scope.model,e=[];return angular.forEach(m.executors,function(v){this.push(v.id)},e),{TaskType:m.taskType.id,Executors:e,DueDate:m.dueDate,Content:m.content,Priority:m.priority?m.priority.id:null}},resetValidation=function(){$scope.validation.generalErrors=[],$scope.validation.fieldErrors={}}}])}),define("text!tasks/states/task/view/taskView.tpl.html",[],function(){return'<div class="container" ng-controller="taskViewCtrl">\r\n	<div class="row" id="content-wrapper">\r\n		<div class="col-xs-12">\r\n\r\n			<div class="row">\r\n				<div class="col-xs-12">\r\n					<task-tabs current-tab="overview" task-num="model.SeqNumber" style="padding-top: 5px"></task-tabs>\r\n				</div>\r\n			</div>\r\n\r\n			<div class="row">\r\n				<div class="col-xs-12">\r\n					<ago-error-msg></ago-error-msg>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n\r\n							<ago-box color="purple" title-click-collapse collapsible="true" large="true" collapsed="generalCollapsed">\r\n								<ago-box-title>\r\n									<i class="icon-table"></i>\r\n									{{ i18n.tasks.view.general.title }}\r\n								</ago-box-title>\r\n								<ago-box-actions>\r\n									<a class="btn btn-xs btn-link">\r\n										<i class="fa" ng-class="{ \'icon-chevron-up\': !generalCollapsed, \'icon-chevron-down\': generalCollapsed }"></i>\r\n									</a>\r\n								</ago-box-actions>\r\n								<form class="form form-horizontal" novalidate>\r\n									<div class="row">\r\n										<div class="form-group col-xs-12 col-md-6">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.seqNumber }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12"><p class="form-control-static">{{ model.SeqNumber }}</p></div>\r\n										</div>\r\n										<div class="form-group col-xs-12 col-md-6" ng-class="{\'has-error\': validation.fieldErrors[\'TaskType\']}">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.type }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12">\r\n												<inline-lookup model="model.TaskType" on-update="onUpdateProp(model, \'TaskType\', val)" on-cancel="resetValidation()" input-lookup="tasks/dictionary/lookupTaskTypes" input-col="col-xs-12" required></inline-lookup>\r\n												<span ng-show="validation.fieldErrors[\'TaskType\']" class="help-block has-error">\r\n													{{ validation.fieldErrors[\'TaskType\'] | joinBy }}\r\n												</span>\r\n											</div>\r\n										</div>\r\n									</div>\r\n\r\n									<div class="row">\r\n										<div class="form-group col-xs-12 col-md-6" ng-class="{\'has-error\': validation.fieldErrors[\'Executors\']}">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.executors }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12">\r\n												<inline-lookup model="model.Executors" on-update="onUpdateProp(model, \'Executors\', val)" on-cancel="resetValidation()" input-lookup="core/projects/lookupParticipant" input-col="col-xs-12" multiple required>\r\n													<executors model="model.Executors"></executors>\r\n												</inline-lookup>\r\n												<span ng-show="validation.fieldErrors[\'Executors\']" class="help-block has-error">\r\n													{{ validation.fieldErrors[\'Executors\'] | joinBy }}\r\n												</span>\r\n											</div>\r\n										</div>\r\n										<div class="form-group col-xs-12 col-md-6" ng-class="{\'has-error\': validation.fieldErrors[\'DueDate\']}">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.dueDate }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12">\r\n												<inline-date model="model.DueDate" on-update="onUpdateProp(model, \'DueDate\', val)" on-cancel="resetValidation()" input-col="col-xs-12"></inline-date>\r\n												<span ng-show="validation.fieldErrors[\'DueDate\']" class="help-block has-error">\r\n													{{ validation.fieldErrors[\'DueDate\'] | joinBy }}\r\n												</span>\r\n											</div>\r\n										</div>\r\n									</div>\r\n\r\n									<div class="row">\r\n										<div class="form-group col-xs-12" ng-class="{\'has-error\': validation.fieldErrors[\'Content\']}">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.content }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12">\r\n												<inline-text-area model="model.Content" on-update="onUpdateProp(model, \'Content\', val)" on-cancel="resetValidation()" input-col="col-xs-12" input-rows="5"></inline-text-area>\r\n												<span ng-show="validation.fieldErrors[\'Content\']" class="help-block has-error">\r\n													{{ validation.fieldErrors[\'Content\'] | joinBy }}\r\n												</span>\r\n											</div>\r\n										</div>\r\n									</div>\r\n\r\n									<div class="row">\r\n										<div class="form-group col-xs-12 col-md-6" ng-class="{\'has-error\': validation.fieldErrors[\'Status\']}">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.status }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12">\r\n												<inline-lookup model="model.Status" on-update="onUpdateProp(model, \'Status\', val)" on-cancel="resetValidation()" input-lookup="tasks/dictionary/lookupTaskStatuses" input-col="col-xs-12" required></inline-lookup>\r\n												<span ng-show="validation.fieldErrors[\'Status\']" class="help-block has-error">\r\n													{{ validation.fieldErrors[\'Status\'] | joinBy }}\r\n												</span>\r\n											</div>\r\n										</div>\r\n										<div class="form-group col-xs-12 col-md-6" ng-class="{\'has-error\': validation.fieldErrors[\'Priority\']}">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.priority }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12">\r\n												<inline-lookup model="model.Priority" on-update="onUpdateProp(model, \'Priority\', val)" on-cancel="resetValidation()" input-lookup="tasks/dictionary/lookupTaskPriorities" input-col="col-xs-12" required></inline-lookup>\r\n												<span ng-show="validation.fieldErrors[\'Priority\']" class="help-block has-error">\r\n													{{ validation.fieldErrors[\'Priority\'] | joinBy }}\r\n												</span>\r\n											</div>\r\n										</div>\r\n									</div>\r\n\r\n									<div class="row">\r\n										<div class="form-group col-xs-12 col-md-6">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.core.fields.creator }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12"><p class="form-control-static">{{ model.Author }}</p></div>\r\n										</div>\r\n										<div class="form-group col-xs-12 col-md-6">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.core.fields.creationTime }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12"><p class="form-control-static">{{ model.CreationTime | date:\'ago_datetime\' }}</p></div>\r\n										</div>\r\n									</div>\r\n									\r\n									<div class="row">\r\n										<div class="form-group col-xs-12" ng-class="{\'has-error\': validation.fieldErrors[\'Note\']}">\r\n											<label class="col-xs-12 col-sm-3 col-md-12 control-label">{{ i18n.tasks.fields.note }}</label>\r\n											<div class="col-xs-12 col-sm-9 col-md-12">\r\n												<inline-text-area model="model.Note" on-update="onUpdateProp(model, \'Note\', val)" on-cancel="resetValidation()" input-col="col-xs-12" input-rows="5"></inline-text-area>\r\n												<span ng-show="validation.fieldErrors[\'Note\']" class="help-block has-error">\r\n													{{ validation.fieldErrors[\'Note\'] | joinBy }}\r\n												</span>\r\n											</div>\r\n										</div>\r\n									</div>\r\n\r\n								</form>\r\n							</ago-box>\r\n						</div>\r\n					</div>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n							<custom-properties model="model"></custom-properties>\r\n						</div>\r\n					</div>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n							<agreements model="model"></agreements>\r\n						</div>\r\n					</div>\r\n\r\n					<div class="row">\r\n						<div class="col-xs-12">\r\n							<status-history model="model.StatusHistory" change="changeStatus"></status-history>\r\n						</div>\r\n					</div>\r\n\r\n				</div><!-- col-xs-12 -->\r\n			</div><!-- row -->\r\n\r\n		</div><!-- col-xs-12 -->\r\n	</div><!-- row content-wrapper -->\r\n</div><!-- container -->'}),define("tasks/states/task/view/taskView",["../../../moduleDef","angular","text!./taskView.tpl.html","text!../../moduleMenu.tpl.html"],function(module,angular,tpl,moduleMenuTpl){module.state({name:"page.project.taskView",url:"/tasks/:num",views:{"":{template:tpl},"moduleMenu@page":{template:moduleMenuTpl}},onEnter:["pageConfig","$stateParams","i18n",function(pageConfig,$stateParams,i18n){pageConfig.setConfig({breadcrumbs:[{name:i18n.msg("tasks.list.title"),url:"page.project.tasks"},{name:$stateParams.num,url:"page.project.taskView"}]})}]}).controller("taskViewCtrl",["$scope","$stateParams","apinetService",function($scope,$stateParams,apinetService){var make=function(task,prop,value,valueProp){valueProp=valueProp||"id";var val=angular.isArray(value)?value.map(function(item){return item[valueProp]}):angular.isObject(value)&&!angular.isDate(value)?value[valueProp]:value;return{Id:task.Id,ModelVersion:task.ModelVersion,Prop:prop,Value:val}};$scope.changeStatus=function(hrecord){$scope.onUpdateProp($scope.model,"Status",hrecord.id)},$scope.changeCustomStatus=function(hrecord){$scope.onUpdateProp($scope.model,"CustomStatus",hrecord.id)},$scope.onUpdateProp=function(task,prop,val){return apinetService.action({method:"tasks/tasks/UpdateTask",project:$stateParams.project,data:make(task,prop,val)}).then(function(response){return $scope.resetValidation(),angular.extend($scope.validation,response.validation),angular.extend($scope.model,response.model),response.validation.success},handleException)},$scope.resetValidation=function(){$scope.validation||($scope.validation={}),$scope.validation.generalErrors=[],$scope.validation.fieldErrors={}};var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=[error]};apinetService.action({method:"tasks/tasks/GetTask",project:$stateParams.project,numpp:$stateParams.num}).then(function(response){$scope.model=response},handleException),$scope.resetValidation()}])}),define("tasks/states",["./states/task-type/taskTypeList","./states/task/taskList","./states/task/create/taskCreate","./states/task/view/taskView"],function(){}),define("text!tasks/directives/agreementsView.tpl.html",[],function(){return'<div>\r\n<ago-box color="blue" title-click-collapse collapsible="true" large="true" collapsed="agreementsCollapsed">\r\n	<ago-box-title>\r\n		<i class="icon-table"></i>\r\n		{{ i18n.tasks.view.agreements.title }}\r\n	</ago-box-title>\r\n	<ago-box-actions>\r\n		<a class="btn btn-xs btn-link">\r\n			<i class="fa" ng-class="{ \'icon-chevron-up\': !agreementsCollapsed, \'icon-chevron-down\': agreementsCollapsed }"></i>\r\n		</a>\r\n	</ago-box-actions>\r\n\r\n	<ago-box-content>\r\n		<div class="box-toolbox box-toolbox-top" ng-show="isAgreementsEditable()">\r\n			<ago-error-msg></ago-error-msg>\r\n\r\n			<div class="row" ng-show="editables.addState">\r\n				<div class="col-xs-12">\r\n					<form class="form-inline" novalidate>\r\n						<div class="col-sm-4" style="padding-left: 0px; padding-right: 0px">\r\n							<input type="text" name="agreemer" lookup="core/projects/lookupParticipant" ng-model="editables.newAgreemer" placeholder="{{ i18n.tasks.view.agreements.placeholders.agreemer }}" class="form-control" />\r\n						</div>\r\n						<div class="col-sm-2" style="padding-left: 0px; padding-right: 0px">\r\n							<input type="text" class="form-control" ng-model="editables.dueDate" placeholder="{{ i18n.tasks.view.agreements.placeholders.dueDate }}" ago-datepicker/>\r\n						</div>\r\n						<div class="col-sm-2" style="padding-left: 0px">\r\n							<button type="button" class="btn" ng-click="addAgreemer()" ng-disabled="!addAgreementAvailable()">{{ i18n.core.buttons.add }}</button>\r\n						</div>\r\n\r\n						<div class="btn-group dropdown pull-right">\r\n							<a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\r\n								{{ i18n.tasks.view.agreements.buttons.agreement.dropdown }}\r\n								<span class="caret"></span>\r\n							</a>\r\n							<ul class="dropdown-menu">\r\n								<li><a ng-click="agree()" href="#">{{ i18n.tasks.view.agreements.buttons.agreement.agree }}</a></li>\r\n								<li><a ng-click="toggleAgree()" href="#">{{ i18n.tasks.view.agreements.buttons.agreement.toggleAgree }}</a></li>\r\n								<li class="divider"></li>\r\n								<li><a ng-click="revoke()" href="#">{{ i18n.tasks.view.agreements.buttons.agreement.revoke }}</a></li>\r\n							</ul>\r\n						</div>\r\n					</form>\r\n				</div>\r\n			</div>\r\n\r\n\r\n			<div class="row" ng-hide="editables.addState">\r\n				<div class="col-xs-12">\r\n					<div class="input-group col-xs-8">\r\n						<input type="text" ng-model="editables.comment" class="form-control" placeholder="{{ i18n.tasks.view.agreements.placeholders.comment }}">\r\n						<span class="input-group-btn">\r\n							<button type="button" class="btn" ng-click="toggleAgree()" title="{{ i18n.core.buttons.cancel }}">\r\n								<i class="icon-reply"></i>\r\n							</button>\r\n							<button type="button" class="btn" ng-click="agree()" title="{{ i18n.tasks.view.agreements.buttons.agreement.agree }}">\r\n								<i class="icon-ok"></i>\r\n							</button>\r\n						</span>\r\n					</div>\r\n				</div>\r\n			</div>\r\n\r\n		</div>\r\n\r\n		<div class="responsive-table">\r\n			<div class="scrollable-area">\r\n				<table class="table table-bordered">\r\n					<thead>\r\n						<tr>\r\n							<th>{{ i18n.tasks.view.agreements.fields.agreemer }}</th>\r\n							<th>{{ i18n.tasks.view.agreements.fields.dueDate }}</th>\r\n							<th class="onepct">{{ i18n.tasks.view.agreements.fields.done }}</th>\r\n							<th class="col-xs-3">{{ i18n.tasks.view.agreements.fields.agreedAt }}</th>\r\n							<th class="col-xs-4">{{ i18n.tasks.view.agreements.fields.comment }}</th>\r\n							<th class="onepct">&nbsp;</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr ng-repeat="a in model.Agreements">\r\n							<td>{{ a.Agreemer }}</td>\r\n							<td>{{ a.DueDate | date:\'ago_date\' }}</td>\r\n							<td>\r\n								<i ng-class="{\'icon-check\': a.Done, \'icon-check-empty\': !a.Done}"></i>\r\n							</td>\r\n							<td>{{ a.AgreedAt | date:\'ago_datetime\' }}</td>\r\n							<td>{{ a.Comment }}</td>\r\n							<td>\r\n								<button type="button" class="close" title="Ð£Ð´Ð°Ð»Ð¸ÑÑ ÑÐ¾Ð³Ð»Ð°ÑÑÑÐµÐ³Ð¾" ng-click="removeAgreement(a)" ng-show="isAgreementsEditable()">&times;</button>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n	</ago-box-content>\r\n</ago-box>\r\n</div>'}),define("tasks/directives/agreementsView",["../moduleDef","angular","text!./agreementsView.tpl.html"],function(module,angular,tpl){module.directive("agreements",["apinetService","$window","i18n","$rootScope","taskStatuses",function(apinetService,$window,i18n,$rootScope,taskStatuses){return{restrict:"E",template:tpl,scope:{model:"="},link:function($scope){$scope.i18n=$rootScope.i18n,$scope.editables={newAgreemer:null,dueDate:null,comment:null,addState:!0},$scope.resetValidation=function(){$scope.validation||($scope.validation={}),$scope.validation.generalErrors=[],$scope.validation.fieldErrors={}};var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=[error]};$scope.addAgreemer=function(){apinetService.action({method:"tasks/tasks/AddAgreemer",taskId:$scope.model.Id,participantId:$scope.editables.newAgreemer.id,dueDate:$scope.editables.dueDate}).then(function(response){$scope.model.Agreements.push(response),$scope.editables.newAgreemer=null,$scope.editables.dueDate=null},handleException)},$scope.removeAgreement=function(agreement){if(!$window.confirm(i18n.msg("tasks.confirm.delete.agreemer")))return;apinetService.action({method:"tasks/tasks/RemoveAgreement",taskId:$scope.model.Id,agreementId:agreement.Id}).then(function(response){if(response==="true"){var index=$scope.model.Agreements.indexOf(agreement);index>=0&&$scope.model.Agreements.splice(index,1)}else $scope.validation.generalErrors=[i18n.msg("core.errors.nothingToDelete")]},handleException)};var doChange=function(params){apinetService.action(params).then(function(response){var agr=null;angular.forEach($scope.model.Agreements,function(v,k){v.Id===response.Id&&(agr=v)}),agr&&angular.extend(agr,response),$scope.editables.addState||$scope.toggleAgree()},handleException)};$scope.agree=function(){doChange({method:"tasks/tasks/AgreeTask",taskId:$scope.model.Id,comment:$scope.editables.comment})},$scope.revoke=function(){doChange({method:"tasks/tasks/RevokeAgreement",taskId:$scope.model.Id})},$scope.toggleAgree=function(){$scope.editables.addState=!$scope.editables.addState,$scope.editables.addState&&($scope.editables.comment=null)},$scope.isAgreementsEditable=function(){return $scope.model&&$scope.model.Status.id!==taskStatuses.Closed},$scope.addAgreementAvailable=function(){return $scope.isAgreementsEditable()&&$scope.editables.newAgreemer!==null}}}}])}),define("text!tasks/directives/customPropertiesView.tpl.html",[],function(){return'<div>\r\n<ago-box color="orange" title-click-collapse collapsible="true" large="true" collapsed="paramsCollapsed">\r\n	<ago-box-title>\r\n		<i class="icon-table"></i>\r\n		{{ i18n.tasks.view.params.title }}\r\n	</ago-box-title>\r\n	<ago-box-actions>\r\n		<a class="btn btn-xs btn-link">\r\n			<i class="fa" ng-class="{ \'icon-chevron-up\': !paramsCollapsed, \'icon-chevron-down\': paramsCollapsed }"></i>\r\n		</a>\r\n	</ago-box-actions>\r\n	<ago-box-content>\r\n		<div class="box-toolbox box-toolbox-top">\r\n			<ago-error-msg></ago-error-msg>\r\n			<form name="form" class="form-inline" novalidate>\r\n				<div class="row" ng-class="{\'has-error\': editables.focused && hasAddError()}">\r\n					<div class="col-sm-5">\r\n						<input name="ptype" type="text" lookup="tasks/tasks/lookupParamTypes" ng-model="editables.type" class="form-control" ng-required="editables.focused" ng-focus="editables.focused=true" ng-blur="editables.focused=false" />\r\n					</div>\r\n					<div class="col-sm-7 input-group">\r\n						<!-- string -->\r\n						<input name="str" type="text" class="form-control" placeholder="{{i18n.tasks.view.params.placeholders.string}}" ng-show="isStr()" ng-model="editables.value" ng-required="isStr() && editables.focused" ng-focus="editables.focused=true" ng-blur="editables.focused=false"/>\r\n						<!-- number -->\r\n						<input name="num" type="text" class="form-control" placeholder="{{i18n.tasks.view.params.placeholders.number}}" ng-show="isNum()" ng-model="editables.value" ng-required="isNum() && editables.focused" ng-pattern="/^\\d+(\\.\\d+)?$/" ng-focus="editables.focused=true" ng-blur="editables.focused=false"/>\r\n						<!-- date -->\r\n						<input name="dt" type="text" class="form-control" placeholder="{{i18n.tasks.view.params.placeholders.date}}" ng-show="isDate()" ng-model="editables.value" ago-datepicker ng-required="isDate() && editables.focused" ng-focus="editables.focused=true" ng-blur="editables.focused=false"/>\r\n						<!-- empty type -->\r\n						<input type="text" class="form-control disabled" placeholder="{{ i18n.tasks.view.params.placeholders.selectType }}" ng-hide="editables.type" disabled="true"/>\r\n\r\n						<div class="input-group-btn">\r\n							<button class="btn btn-success" ng-disabled="hasAddError()" ng-click="add()">{{ i18n.core.buttons.add }}</button>\r\n						</div>\r\n					</div>\r\n				</div>\r\n				<div class="row">\r\n					<div class="col-xs-12">\r\n						<span class="has-error" ng-show="isNum() && form.num.$error.pattern">\r\n							{{ i18n.tasks.view.params.numFormat }}\r\n						</span>\r\n					</div>\r\n				</div>\r\n			</form>\r\n		</div>\r\n		<p ng-hide="model.Parameters.length">\r\n			<span class="text-muted">{{ i18n.tasks.view.params.empty }}</span>\r\n		</p>\r\n		<table class="table" ng-show="model.Parameters.length">\r\n			<thead>\r\n				<tr>\r\n					<th class="col-xs-4">{{ i18n.core.fields.customProperties.type }}</th>\r\n					<th>{{ i18n.core.fields.customProperties.value }}</th>\r\n					<th class="onepct">&nbsp;</th>\r\n				</tr>\r\n			</thead>\r\n			<tbody>\r\n				<tr ng-repeat="p in model.Parameters">\r\n					<td>{{ p.Type.text }}</td>\r\n					<td inline-edit="p.Value" on-update="updateParam(p, val)">\r\n						<span class="editable" ng-hide="editMode" ng-click="edit()">\r\n							{{ valueToString(p) }}\r\n						</span>\r\n						<form name="editForm" class="form-inline" ng-show="editMode" ng-class="{\'has-error\': hasEditError(p, editForm)}" style="width: 100%" novalidate>\r\n							<custom-property-editor></custom-property-editor>\r\n						</form>\r\n					</td>\r\n					<td>\r\n						<ago-btn-delete title="{{ i18n.core.buttons.delete }}" ng-click="delete(p)"></ago-btn-delete>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</ago-box-content>\r\n</ago-box>\r\n</div>'}),define("tasks/directives/customPropertiesView",["../moduleDef","angular","text!./customPropertiesView.tpl.html"],function(module,angular,tpl){module.directive("customProperties",["$rootScope","apinetService","$window","$filter",function($rootScope,apinetService,$window,$filter){return{restrict:"E",replace:!0,template:tpl,scope:{model:"="},link:function(scope){scope.i18n=$rootScope.i18n},controller:["$scope",function($scope){$scope.editables={type:null,value:null,focused:!1};var isValueTypeMatch=function(needed,type){return type=type||$scope.editables.type,type&&type.ValueType===needed};$scope.$watch("editables.type",function(){$scope.editables.value=null},!0),$scope.isNum=function(type){return isValueTypeMatch("Number",type)},$scope.isStr=function(type){return isValueTypeMatch("String",type)},$scope.isDate=function(type){return isValueTypeMatch("Date",type)},$scope.hasAddError=function(){return $scope.editables.type===null||$scope.editables.value===null||$scope.isStr()&&$scope.form.str.$invalid||$scope.isNum()&&$scope.form.num.$invalid||$scope.isDate()&&$scope.form.dt.$invalid},$scope.hasEditError=function(param,form){return $scope.isStr(param.Type)&&form.str.$invalid||$scope.isNum(param.Type)&&(form.num.$invalid||!/^\d+(\.\d+)?$/.test(form.num.$viewValue))||$scope.isDate(param.Type)&&form.dt.$invalid},$scope.valueToString=function(param){switch(param.Type.ValueType){case"String":return param.Value;case"Number":return param.Value;case"Date":return $filter("date")(param.Value,"ago_date");default:return console.log("Error when extract param value: %s - %s",param.Type.ValueType,param.Value),""}},$scope.resetValidation=function(){$scope.validation={}};var handleException=function(error){$scope.resetValidation(),$scope.validation.generalErrors=[error]},handleValidationErrors=function(validation){$scope.resetValidation(),angular.extend($scope.validation,validation)};$scope.add=function(){apinetService.action({method:"tasks/tasks/EditParam",taskId:$scope.model.Id,model:{type:{id:$scope.editables.type.id},value:$scope.editables.value}}).then(function(result){result.validation.success?($scope.editables.value=null,$scope.resetValidation(),$scope.model.Parameters.unshift(result.model)):handleValidationErrors(result.validation)},handleException)},$scope.delete=function(param){if(!$window.confirm($scope.i18n.msg("core.confirm.delete.record")))return;apinetService.action({method:"tasks/tasks/DeleteParam",paramId:param.Id}).then(function(){var modelIndex=$scope.model.Parameters.indexOf(param);modelIndex>=0&&$scope.model.Parameters.splice(modelIndex,1)},handleException)},$scope.updateParam=function(param,val){return!param||!val?null:($scope.resetValidation(),apinetService.action({method:"tasks/tasks/EditParam",taskId:$scope.model.Id,model:{id:param.Id,value:val}}).then(function(result){result.validation.success?angular.extend(param,result.model):handleValidationErrors(result.validation)},handleException))},$scope.resetValidation()}]}}])}),define("text!tasks/directives/customPropertyEditor.tpl.html",[],function(){return'<div class="input-group" style="padding-left: 0px">\r\n	<!-- string -->\r\n	<input name="str" type="text" class="form-control" placeholder="{{i18n.tasks.view.params.placeholders.string}}" ng-show="isStr(p.Type)" ng-model="emodel.value" ng-required="isStr(p.Type)"/>\r\n	<!-- number -->\r\n	<input name="num" type="text" class="form-control" placeholder="{{i18n.tasks.view.params.placeholders.number}}" ng-show="isNum(p.Type)" ng-model="emodel.value" ng-required="isNum(p.Type)" />\r\n	<!-- date -->\r\n	<input name="dt" type="text" class="form-control" placeholder="{{i18n.tasks.view.params.placeholders.date}}" ng-show="isDate(p.Type)" ng-model="emodel.value" ago-datepicker ng-required="isDate(p.Type)" />\r\n\r\n	<div class="input-group-btn">\r\n		<button type="button" class="btn" ng-show="isChanged" ng-click="cancel()" ng-disabled="!cancelEnabled()" title="{{ i18n.core.buttons.cancel }}">\r\n			<i class="icon-reply"></i>\r\n		</button>\r\n		<button type="button" class="btn" ng-show="isChanged" ng-click="update()" ng-disabled="!cancelEnabled() || hasEditError(p, editForm)" title="{{ i18n.core.buttons.save }}">\r\n			<i class="icon-ok"></i>\r\n		</button>\r\n		<img ng-show="waiting" class="waiting"></img>\r\n	</div>\r\n</div>'}),define("tasks/directives/customPropertyEditor",["../moduleDef","angular","text!./customPropertyEditor.tpl.html"],function(module,angular,tpl){module.directive("customPropertyEditor",[function(){return{restrict:"E",replace:!0,template:tpl,link:function(scope,elm){var $datepicker=$("input[ago-datepicker]",elm),onShow=function(){scope.elInput.off("blur",scope.onBlur)},onHide=function(){scope.elInput.on("blur",scope.onBlur)};$datepicker.on("show",onShow),$datepicker.on("hide",onHide)}}}])}),define("text!tasks/directives/executorsView.tpl.html",[],function(){return'<ul class="executors">\r\n	<li ng-repeat="e in executors" title="{{ e.description }}">{{ e.text }}</li>\r\n</div>'}),define("normalize",["require","module"],function(require,module){function convertURIBase(uri,fromBase,toBase){if(uri.indexOf("data:")===0)return uri;uri=removeDoubleSlashes(uri);if(uri.match(/^\//)||uri.match(protocolRegEx))return uri;var toBaseProtocol=toBase.match(protocolRegEx),fromBaseProtocol=fromBase.match(protocolRegEx);return fromBaseProtocol&&(!toBaseProtocol||toBaseProtocol[1]!=fromBaseProtocol[1]||toBaseProtocol[2]!=fromBaseProtocol[2])?absoluteURI(uri,fromBase):relativeURI(absoluteURI(uri,fromBase),toBase)}function absoluteURI(uri,base){uri.substr(0,2)=="./"&&(uri=uri.substr(2));var baseParts=base.split("/"),uriParts=uri.split("/");baseParts.pop();while(curPart=uriParts.shift())curPart==".."?baseParts.pop():baseParts.push(curPart);return baseParts.join("/")}function relativeURI(uri,base){var baseParts=base.split("/");baseParts.pop(),base=baseParts.join("/")+"/",i=0;while(base.substr(i,1)==uri.substr(i,1))i++;while(base.substr(i,1)!="/")i--;base=base.substr(i+1),uri=uri.substr(i+1),baseParts=base.split("/");var uriParts=uri.split("/");out="";while(baseParts.shift())out+="../";while(curPart=uriParts.shift())out+=curPart+"/";return out.substr(0,out.length-1)}var slashes=/([^:])\/+/g,removeDoubleSlashes=function(uri){return uri.replace(slashes,"$1/")},protocolRegEx=/[^\:\/]*:\/\/([^\/])*/,normalizeCSS=function(source,fromBase,toBase,cssBase){fromBase=removeDoubleSlashes(fromBase),toBase=removeDoubleSlashes(toBase);var urlRegEx=/@import\s*("([^"]*)"|'([^']*)')|url\s*\(\s*(\s*"([^"]*)"|'([^']*)'|[^\)]*\s*)\s*\)/ig,result,url,source;while(result=urlRegEx.exec(source)){url=result[3]||result[2]||result[5]||result[6]||result[4];var newUrl;cssBase&&url.substr(0,1)=="/"?newUrl=cssBase+url:newUrl=convertURIBase(url,fromBase,toBase);var quoteLen=result[5]||result[6]?1:0;source=source.substr(0,urlRegEx.lastIndex-url.length-quoteLen-1)+newUrl+source.substr(urlRegEx.lastIndex-quoteLen-1),urlRegEx.lastIndex=urlRegEx.lastIndex+(newUrl.length-url.length)}return source};return normalizeCSS.convertURIBase=convertURIBase,normalizeCSS}),define("css",["./normalize"],function(normalize){function indexOf(a,e){for(var i=0,l=a.length;i<l;i++)if(a[i]===e)return i;return-1}if(typeof window=="undefined")return{load:function(n,r,load){load()}};var testing=!1,head=document.getElementsByTagName("head")[0],engine=window.navigator.userAgent.match(/Trident\/([^ ;]*)|AppleWebKit\/([^ ;]*)|Opera\/([^ ;]*)|rv\:([^ ;]*)(.*?)Gecko\/([^ ;]*)|MSIE\s([^ ;]*)/),hackLinks=!1;!engine||(engine[1]||engine[7]?(hackLinks=parseInt(engine[1])<6||parseInt(engine[7])<=9,engine="trident"):engine[2]?(hackLinks=!0,engine="webkit"):engine[3]||(engine[4]?(hackLinks=parseInt(engine[4])<18,engine="gecko"):testing&&alert("Engine detection failed")));var cssAPI={},absUrlRegEx=/^\/|([^\:\/]*:)/;cssAPI.pluginBuilder="./css-builder";var curBuffer=[],onBufferLoad={},bufferResources=[];cssAPI.addBuffer=function(resourceId){if(indexOf(curBuffer,resourceId)!=-1)return;if(indexOf(bufferResources,resourceId)!=-1)return;curBuffer.push(resourceId),bufferResources.push(resourceId)},cssAPI.setBuffer=function(css,isLess){var pathname=window.location.pathname.split("/");pathname.pop(),pathname=pathname.join("/")+"/";var baseParts=require.toUrl("base_url").split("/");baseParts.pop();var baseUrl=baseParts.join("/")+"/";baseUrl=normalize.convertURIBase(baseUrl,pathname,"/"),baseUrl.match(absUrlRegEx)||(baseUrl="/"+baseUrl),baseUrl.substr(baseUrl.length-1,1)!="/"&&(baseUrl+="/"),cssAPI.inject(normalize(css,baseUrl,pathname));for(var i=0;i<curBuffer.length;i++)(isLess&&curBuffer[i].substr(curBuffer[i].length-5,5)==".less"||!isLess&&curBuffer[i].substr(curBuffer[i].length-4,4)==".css")&&(function(resourceId){onBufferLoad[resourceId]=onBufferLoad[resourceId]||!0,setTimeout(function(){typeof onBufferLoad[resourceId]=="function"&&onBufferLoad[resourceId](),delete onBufferLoad[resourceId]},7)}(curBuffer[i]),curBuffer.splice(i--,1))},cssAPI.attachBuffer=function(resourceId,load){for(var i=0;i<curBuffer.length;i++)if(curBuffer[i]==resourceId)return onBufferLoad[resourceId]=load,!0;if(onBufferLoad[resourceId]===!0)return onBufferLoad[resourceId]=load,!0;if(indexOf(bufferResources,resourceId)!=-1)return load(),!0};var webkitLoadCheck=function(link,callback){setTimeout(function(){for(var i=0;i<document.styleSheets.length;i++){var sheet=document.styleSheets[i];if(sheet.href==link.href)return callback()}webkitLoadCheck(link,callback)},10)},mozillaLoadCheck=function(style,callback){setTimeout(function(){try{return style.sheet.cssRules,callback()}catch(e){}mozillaLoadCheck(style,callback)},10)};if(engine=="trident"&&hackLinks)var ieStyles=[],ieQueue=[],ieStyleCnt=0,ieLoad=function(url,callback){var style;ieQueue.push({url:url,cb:callback}),style=ieStyles.shift(),!style&&ieStyleCnt++<31&&(style=document.createElement("style"),head.appendChild(style)),style&&ieLoadNextImport(style)},ieLoadNextImport=function(style){var curImport=ieQueue.shift();if(!curImport){style.onload=noop,ieStyles.push(style);return}style.onload=function(){curImport.cb(curImport.ss),ieLoadNextImport(style)};var curSheet=style.styleSheet;curImport.ss=curSheet.imports[curSheet.addImport(curImport.url)]};var createLink=function(url){var link=document.createElement("link");return link.type="text/css",link.rel="stylesheet",link.href=url,link},noop=function(){};cssAPI.linkLoad=function(url,callback){var timeout=setTimeout(function(){testing&&alert("timeout"),callback()},waitSeconds*1e3-100),_callback=function(){clearTimeout(timeout),link&&(link.onload=noop),setTimeout(callback,7)};if(!hackLinks){var link=createLink(url);link.onload=_callback,head.appendChild(link)}else if(engine=="webkit"){var link=createLink(url);webkitLoadCheck(link,_callback),head.appendChild(link)}else if(engine=="gecko"){var style=document.createElement("style");style.textContent='@import "'+url+'"',mozillaLoadCheck(style,_callback),head.appendChild(style)}else engine=="trident"&&ieLoad(url,_callback)};var progIds=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],fileCache={},get=function(url,callback,errback){if(fileCache[url]){callback(fileCache[url]);return}var xhr,i,progId;if(typeof XMLHttpRequest!="undefined")xhr=new XMLHttpRequest;else if(typeof ActiveXObject!="undefined")for(i=0;i<3;i+=1){progId=progIds[i];try{xhr=new ActiveXObject(progId)}catch(e){}if(xhr){progIds=[progId];break}}xhr.open("GET",url,requirejs.inlineRequire?!1:!0),xhr.onreadystatechange=function(evt){var status,err;xhr.readyState===4&&(status=xhr.status,status>399&&status<600?(err=new Error(url+" HTTP status: "+status),err.xhr=xhr,errback(err)):(fileCache[url]=xhr.responseText,callback(xhr.responseText)))},xhr.send(null)},styleCnt=0,curStyle;cssAPI.inject=function(css){styleCnt<31&&(curStyle=document.createElement("style"),curStyle.type="text/css",head.appendChild(curStyle),styleCnt++),curStyle.styleSheet?curStyle.styleSheet.cssText+=css:curStyle.appendChild(document.createTextNode(css))};var importRegEx=/@import\s*(url)?\s*(('([^']*)'|"([^"]*)")|\(('([^']*)'|"([^"]*)"|([^\)]*))\))\s*;?/g,pathname=window.location.pathname.split("/");pathname.pop(),pathname=pathname.join("/")+"/";var loadCSS=function(fileUrl,callback,errback){fileUrl.match(absUrlRegEx)||(fileUrl="/"+normalize.convertURIBase(fileUrl,pathname,"/")),get(fileUrl,function(css){css=normalize(css,fileUrl,pathname);var importUrls=[],importIndex=[],importLength=[],match;while(match=importRegEx.exec(css)){var importUrl=match[4]||match[5]||match[7]||match[8]||match[9];importUrls.push(importUrl),importIndex.push(importRegEx.lastIndex-match[0].length),importLength.push(match[0].length)}var completeCnt=0;for(var i=0;i<importUrls.length;i++)(function(i){loadCSS(importUrls[i],function(importCSS){css=css.substr(0,importIndex[i])+importCSS+css.substr(importIndex[i]+importLength[i]);var lenDiff=importCSS.length-importLength[i];for(var j=i+1;j<importUrls.length;j++)importIndex[j]+=lenDiff;completeCnt++,completeCnt==importUrls.length&&callback(css)},errback)})(i);importUrls.length==0&&callback(css)},errback)};cssAPI.normalize=function(name,normalize){return name.substr(name.length-4,4)==".css"&&(name=name.substr(0,name.length-4)),normalize(name)};var waitSeconds,alerted=!1;return cssAPI.load=function(cssId,req,load,config,parse){waitSeconds=waitSeconds||config.waitSeconds||7;var resourceId=cssId+(parse?".less":".css");if(cssAPI.attachBuffer(resourceId,load))return;var fileUrl=req.toUrl(resourceId);!alerted&&testing&&(alert(hackLinks?"hacking links":"not hacking"),alerted=!0),parse?loadCSS(fileUrl,function(css){parse&&(css=parse(css,function(css){cssAPI.inject(css),setTimeout(load,7)}))}):cssAPI.linkLoad(fileUrl,load)},testing&&(cssAPI.inspect=function(){if(stylesheet.styleSheet)return stylesheet.styleSheet.cssText;if(stylesheet.innerHTML)return stylesheet.innerHTML}),cssAPI}),requirejs.s.contexts._.nextTick=function(f){f()},require(["css"],function(css){css.addBuffer("tasks/directives/executorsView.css")}),requirejs.s.contexts._.nextTick=requirejs.nextTick,define("tasks/directives/executorsView",["../moduleDef","angular","text!./executorsView.tpl.html","css!./executorsView.css"],function(module,angular,tpl){module.directive("executors",function(){return{restrict:"E",replace:!0,template:tpl,scope:{executors:"=model"}}})}),define("text!tasks/directives/statusHistoryView.tpl.html",[],function(){return'<div>\r\n<ago-box color="green" title-click-collapse collapsible="true" large="true" collapsed="historyCollapsed">\r\n	<ago-box-title>\r\n		<i class="icon-table"></i>\r\n		{{ i18n.tasks.view.statusHistory.title }}\r\n	</ago-box-title>\r\n	<ago-box-actions>\r\n		<a class="btn btn-xs btn-link">\r\n			<i class="fa" ng-class="{ \'icon-chevron-up\': !historyCollapsed, \'icon-chevron-down\': historyCollapsed }"></i>\r\n		</a>\r\n	</ago-box-actions>\r\n	\r\n	<div class="box-toolbox box-toolbox-top">\r\n		<button type="button" class="btn" ng-class="statusColor(n.id)" ng-repeat="n in model.Next" ng-click="changeStatus(n)" style="margin-right: 5px">\r\n			<i ng-class="statusIcon(n.id)"></i>\r\n			{{ n.text }}\r\n		</button>\r\n	</div>\r\n\r\n	<table class="table table-bordered">\r\n		<thead>\r\n			<tr>\r\n				<th>{{ i18n.tasks.view.statusHistory.fields.status }}</th>\r\n				<th>{{ i18n.tasks.view.statusHistory.fields.author }}</th>\r\n				<th>{{ i18n.tasks.view.statusHistory.fields.effectivePeriod }}</th>\r\n				<th>{{ i18n.tasks.view.statusHistory.fields.duration }}</th>\r\n			</tr>\r\n		</thead>\r\n		<tbody>\r\n			<tr ng-repeat="h in model.History">\r\n				<td>\r\n					<button type="button" class="btn disabled" ng-class="statusColor(h.Status.id)">\r\n						<i ng-class="statusIcon(h.Status.id)"></i>\r\n						{{ h.Status.text }}\r\n					</button>\r\n				</td>\r\n				<td>{{ h.Author }}</td>\r\n				<td>\r\n					{{ \r\n						i18n.msg(\'tasks.view.statusHistory.period\', {\r\n								start: (h.Start | date:\'ago_datetime\'), \r\n								finish: ((h.Finish | date:\'ago_datetime\') || i18n.core.labels.presentTime) \r\n							}) \r\n					}}\r\n				</td>\r\n				<td>\r\n					{{ duration(h) | date:\'ago_datetime\' }}\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n</ago-box>\r\n</div>'}),define("tasks/directives/statusHistoryView",["../moduleDef","angular","text!./statusHistoryView.tpl.html"],function(module,angular,tpl){module.directive("statusHistory",["$rootScope","taskStatuses","$locale",function($rootScope,taskStatuses,$locale){return{restrict:"E",replace:!0,template:tpl,scope:{model:"=",onChange:"=change"},link:function(scope,elm,attr){scope.i18n=$rootScope.i18n;var pluralDurationPart=function(cnt,type,omitZero){if(omitZero&&cnt<=0)return"";switch($locale.pluralCat(cnt)){case"one":case"few":case"many":case"other":var pcat=$locale.pluralCat(cnt);return cnt+" "+scope.i18n.msg("tasks.view.statusHistory.duration."+type+"."+pcat);case"zero":case"two":default:return""}};scope.isClosedRecord=function(hrecord){return hrecord.hasOwnProperty("Finish")},scope.duration=function(hrecord){var finish=hrecord.Finish?new Date(hrecord.Finish):new Date,start=new Date(hrecord.Start),f=Date.UTC(finish.getFullYear(),finish.getMonth(),finish.getDate(),finish.getHours(),finish.getMinutes(),finish.getSeconds()),s=Date.UTC(start.getFullYear(),start.getMonth(),start.getDate(),start.getHours(),start.getMinutes(),start.getSeconds()),ms=Math.abs(f-s),MS_PER_DAY=864e5,MS_PER_HOUR=36e5,MS_PER_MINUTE=6e4,daysDiff=Math.floor(ms/MS_PER_DAY),hoursDiff=Math.floor((ms-daysDiff*MS_PER_DAY)/MS_PER_HOUR),minutesDiff=Math.floor((ms-(daysDiff*MS_PER_DAY+hoursDiff*MS_PER_HOUR))/MS_PER_MINUTE),minuteName=scope.i18n.msg("tasks.view.statusHistory.duration.minutes"),days=pluralDurationPart(daysDiff,"days",!0);return days+" "+pluralDurationPart(hoursDiff,"hours",days==="")+(minutesDiff>0?" "+minutesDiff+" "+minuteName:"< 1 "+minuteName)},scope.changeStatus=function(hrecord){angular.isFunction(scope.onChange)&&scope.onChange(hrecord)},scope.statusIcon=function(status){switch(status){case taskStatuses.New:return"icon-time";case taskStatuses.Doing:return"icon-cogs";case taskStatuses.Done:return"icon-ok";case taskStatuses.Discarded:return"icon-pause";case taskStatuses.Closed:return"icon-beer";default:return""}},scope.statusColor=function(status){switch(status){case taskStatuses.New:return"btn-danger";case taskStatuses.Doing:return"btn-primary";case taskStatuses.Done:return"btn-warning";case taskStatuses.Discarded:return"btn-inverse";case taskStatuses.Closed:return"btn-success";default:return""}}}}}])}),define("text!tasks/directives/taskTabs.tpl.html",[],function(){return'<div class="tabbable">\r\n	<ul class="nav nav-responsive nav-tabs">\r\n		<li ng-class="{active: tab == \'overview\' }">\r\n			<a ui-sref="page.project.page.project.taskView({ num: num })">{{ i18n.tasks.view.tabs.overview }}</a>\r\n		</li>\r\n		<li ng-class="{active: tab == \'comments\'}">\r\n			<a href="#!/tasks/{{ num }}/comments">{{ i18n.tasks.view.tabs.comments }}</a>\r\n		</li>\r\n		<li ng-class="{active: tab == \'files\'}">\r\n			<a href="#!/tasks/{{ num }}/files">{{ i18n.tasks.view.tabs.files }}</a>\r\n		</li>\r\n	</ul>\r\n</div>'}),define("tasks/directives/taskTabs",["../moduleDef","angular","text!./taskTabs.tpl.html"],function(module,angular,tpl){module.directive("tasTabs",["$rootScope",function($rootScope){return{restrict:"E",replace:!0,template:tpl,scope:{tab:"@currentTab",num:"=taskNum"},link:function(scope,elm){scope.i18n=$rootScope.i18n,$(".nav-responsive.nav-tabs",elm).tabdrop()}}}])}),define("tasks/directives",["./directives/agreementsView","./directives/customPropertiesView","./directives/customPropertyEditor","./directives/executorsView","./directives/statusHistoryView","./directives/taskTabs"],function(){}),function(){function addPart(locale,master,needed,toLoad,prefix,suffix){master[locale]&&(needed.push(locale),(master[locale]===!0||master[locale]===1)&&toLoad.push(prefix+locale+"/"+suffix))}function addIfExists(req,locale,toLoad,prefix,suffix){var fullName=prefix+locale+"/"+suffix;require._fileExists(req.toUrl(fullName+".js"))&&toLoad.push(fullName)}function mixin(target,source,force){var prop;for(prop in source)source.hasOwnProperty(prop)&&(!target.hasOwnProperty(prop)||force)?target[prop]=source[prop]:typeof source[prop]=="object"&&(!target[prop]&&source[prop]&&(target[prop]={}),mixin(target[prop],source[prop],force))}var nlsRegExp=/(^.*(^|\/)nls(\/|$))([^\/]*)\/?([^\/]*)/;define("i18n",["module"],function(module){var masterConfig=module.config?module.config():{};return{version:"2.0.4",load:function(name,req,onLoad,config){config=config||{},config.locale&&(masterConfig.locale=config.locale);var masterName,match=nlsRegExp.exec(name),prefix=match[1],locale=match[4],suffix=match[5],parts=locale.split("-"),toLoad=[],value={},i,part,current="";match[5]?(prefix=match[1],masterName=prefix+suffix):(masterName=name,suffix=match[4],locale=masterConfig.locale,locale||(locale=masterConfig.locale=typeof navigator=="undefined"?"root":(navigator.language||navigator.userLanguage||"root").toLowerCase()),parts=locale.split("-"));if(config.isBuild){toLoad.push(masterName),addIfExists(req,"root",toLoad,prefix,suffix);for(i=0;i<parts.length;i++)part=parts[i],current+=(current?"-":"")+part,addIfExists(req,current,toLoad,prefix,suffix);req(toLoad,function(){onLoad()})}else req([masterName],function(master){var needed=[],part;addPart("root",master,needed,toLoad,prefix,suffix);for(i=0;i<parts.length;i++)part=parts[i],current+=(current?"-":"")+part,addPart(current,master,needed,toLoad,prefix,suffix);req(toLoad,function(){var i,partBundle,part;for(i=needed.length-1;i>-1&&needed[i];i--){part=needed[i],partBundle=master[part];if(partBundle===!0||partBundle===1)partBundle=req(prefix+part+"/"+suffix);mixin(value,partBundle)}onLoad(value)})})}}})}(),define("tasks/nls/module",{en:!0,ru:!0}),define("tasks/module",["./moduleDef","./states","./directives","i18n!./nls/module"],function(module){return module.constant("taskStatuses",{New:"New",Doing:"Doing",Done:"Done",Discarded:"Discarded",Closed:"Closed"})}),requirejs.s.contexts._.nextTick=function(f){f()},require(["css"],function(css){css.setBuffer('ul.executors {\r\n	display: inline;\r\n	margin: 0;\r\n	padding: 0;\r\n}\r\n \r\nul.executors li {\r\n	float: left;\r\n	display: inline;\r\n	list-style: none;\r\n	margin: 0;\r\n	padding: 0;\r\n}\r\n \r\nul.executors li:after {\r\n	content: ",\\00a0";\r\n}\r\n \r\nul.executors li:last-child:after {\r\n	content: "";\r\n}')}),requirejs.s.contexts._.nextTick=requirejs.nextTick;